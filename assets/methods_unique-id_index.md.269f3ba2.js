import{_ as s,c as n,o as a,a as p}from"./app.08b52d60.js";const m=JSON.parse('{"title":"生成唯一 ID","description":"","frontmatter":{},"headers":[],"relativePath":"methods/unique-id/index.md","lastUpdated":1677637885000}'),e={name:"methods/unique-id/index.md"},l=p(`<h1 id="生成唯一-id" tabindex="-1">生成唯一 ID <a class="header-anchor" href="#生成唯一-id" aria-hidden="true">#</a></h1><p>可传入一个字符串作为前缀 <code>prefix</code>，不传入 <code>prefix</code> 时 <code>prefix</code> 默认为空字符串。返回一个字符串作为唯一 ID。</p><p>示例 1：</p><div class="language-text line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#c9d1d9;">输入：prefix = &#39;&#39;</span></span>
<span class="line"><span style="color:#c9d1d9;">输出：&#39;1&#39;</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">输入：prefix = &#39;prefix-&#39;</span></span>
<span class="line"><span style="color:#c9d1d9;">输出：&#39;prefix-1&#39;</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">输入：prefix = &#39;prefix&#39;</span></span>
<span class="line"><span style="color:#c9d1d9;">输出：&#39;prefix1&#39;</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span>
<span class="line"><span style="color:#c9d1d9;">输入：prefix = &#39;&#39;</span></span>
<span class="line"><span style="color:#c9d1d9;">输出：2</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><a href="./index.ts" download="unique-id">点击下载 TypeScript 文件</a></p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">uniqueId</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">prefix</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;&#39;</span><span style="color:#C9D1D9;">)</span><span style="color:#FF7B72;">:</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">string</span><span style="color:#C9D1D9;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#C9D1D9;"> { uniqueId };</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><a href="./index.js" download="unique-id">点击下载 JavaScript 文件</a></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#8B949E;">/**</span></span>
<span class="line"><span style="color:#8B949E;"> * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">{string}</span><span style="color:#8B949E;"> </span><span style="color:#C9D1D9;">prefix</span></span>
<span class="line"><span style="color:#8B949E;"> * </span><span style="color:#FF7B72;">@returns</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">{string}</span></span>
<span class="line"><span style="color:#8B949E;"> */</span></span>
<span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">uniqueId</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">prefix</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;&#39;</span><span style="color:#C9D1D9;">) {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#C9D1D9;"> { uniqueId };</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,8),r=[l];function c(o,i,t,d,u,y){return a(),n("div",null,r)}const D=s(e,[["render",c]]);export{m as __pageData,D as default};
