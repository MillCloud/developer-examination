import{_ as s,c as a,o as n,a as p}from"./app.08b52d60.js";const F=JSON.parse('{"title":"二维数组转换成对象","description":"","frontmatter":{},"headers":[],"relativePath":"methods/array-to-object/index.md","lastUpdated":1673235177000}'),e={name:"methods/array-to-object/index.md"},l=p(`<h1 id="二维数组转换成对象" tabindex="-1">二维数组转换成对象 <a class="header-anchor" href="#二维数组转换成对象" aria-hidden="true">#</a></h1><p>传入一个二维数组 <code>array</code>，数组内所有元素均为数组，第一个元素是字符串或数字，第二个元素不定。返回一个对象，对象的键对应数组内元素的第一个元素，值对应数组内元素的第二个元素。</p><p>示例：</p><div class="language-text line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#c9d1d9;">输入：array = [[1, 2], [3, 4]]</span></span>
<span class="line"><span style="color:#c9d1d9;">输出：{ 1: 2, 3: 4 }</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><a href="./index.ts" download="array-to-object.ts">点击下载 TypeScript 文件</a></p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">arrayToObject</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">array</span><span style="color:#FF7B72;">:</span><span style="color:#C9D1D9;"> [</span><span style="color:#79C0FF;">string</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">|</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">number</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">any</span><span style="color:#C9D1D9;">][])</span><span style="color:#FF7B72;">:</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">Record</span><span style="color:#C9D1D9;">&lt;</span><span style="color:#79C0FF;">string</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">|</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">number</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">any</span><span style="color:#C9D1D9;">&gt; {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#C9D1D9;"> { arrayToObject };</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><a href="./index.js" download="array-to-object.js">点击下载 JavaScript 文件</a></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#8B949E;">/**</span></span>
<span class="line"><span style="color:#8B949E;"> * </span><span style="color:#FF7B72;">@param</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">{[string | number, any][]}</span><span style="color:#8B949E;"> </span><span style="color:#C9D1D9;">array</span></span>
<span class="line"><span style="color:#8B949E;"> * </span><span style="color:#FF7B72;">@returns</span><span style="color:#8B949E;"> </span><span style="color:#FFA657;">{Record&lt;string | number, any&gt;}</span></span>
<span class="line"><span style="color:#8B949E;"> */</span></span>
<span class="line"><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">arrayToObject</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">array</span><span style="color:#C9D1D9;">) {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#C9D1D9;"> { arrayToObject };</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,8),o=[l];function r(t,c,i,y,d,b){return n(),a("div",null,o)}const D=s(e,[["render",r]]);export{F as __pageData,D as default};
